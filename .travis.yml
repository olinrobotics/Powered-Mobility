# NOTE: The build lifecycle on Travis.ci is something like this:
#    before_install
#    install
#    before_script
#    script
#    after_success or after_failure
#    after_script
#    OPTIONAL before_deploy
#    OPTIONAL deploy
#    OPTIONAL after_deploy

################################################################################

dist: xenial
sudo: required
language:
  - generic
cache:
  - apt

env:
  # Configuration variables. All variables are global now, but this can be used to
  # trigger a build matrix for different ROS distributions if desired.
  global:
    - ROS_DISTRO=kinetic
    - ROS_CI_DESKTOP="`lsb_release -cs`"  # e.g. [precise|trusty|...]
    - CI_SOURCE_PATH=$(pwd)
    - ROSINSTALL_FILE=$CI_SOURCE_PATH/deps.rosinstall
    - ROS_PARALLEL_JOBS='-j8 -l6'
      # Set the python path manually to include /usr/-/python2.7/dist-packages
      # as this is where apt-get installs python packages.
    - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages

# system deps
before_install:
    # Ros Repository Setup
  - bash ./.travis/wait_for_apt.sh
  - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  - travis_retry sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
  - sudo apt-get update -qq
  - sudo apt-get install -y python-catkin-pkg python-catkin-tools python-rosdep python-wstool ros-$ROS_DISTRO-catkin -y

    # Realsense Repository Setup
  - sudo sh -c "echo 'deb http://realsense-hw-public.s3.amazonaws.com/Debian/apt-repo xenial main' > /etc/apt/sources.list.d/realsense-public.list"
  - travis_retry sudo apt-key adv --keyserver keys.gnupg.net --recv-key C8B3A55A6F3EFCDE
  - sudo apt-get update -qq
  - sudo apt-get install librealsense2-dkms librealsense2-utils librealsense2-dev librealsense2-dbg -y

    # Other Tools
  - sudo apt-get install mesa-utils -y
  - sudo apt-get install jq dtrx wget -y

  - source /opt/ros/$ROS_DISTRO/setup.bash
    # Prepare rosdep to install dependencies.
  - sudo rosdep init
  - rosdep update

# Install all dependencies, using wstool first and rosdep second.
# wstool looks for a ROSINSTALL_FILE defined in the environment variables.
# source dependencies: install using wstool.
# package depdencies: install using rosdep.
install:
  # Create a catkin workspace with the package under integration.
  - mkdir -p ~/catkin_ws/src
  - cd ~/catkin_ws/src
  - catkin_init_workspace
    # Create the devel/setup.bash (run catkin_make with an empty workspace) and
    # source it to set the path variables.
  - cd ~/catkin_ws
  - catkin build
  - source devel/setup.bash
    # Add the package under integration to the workspace using a symlink.
  - cd ~/catkin_ws/src
  - ln -s $CI_SOURCE_PATH .

    # source dependencies with wstool
  - cd ~/catkin_ws/src
  - wstool init
  - wstool merge $ROSINSTALL_FILE
  - wstool up

    # package dependencies with rosdep
  - rosdep install --from-paths . --ignore-src --skip-keys='librealsense2' --rosdistro=$ROS_DISTRO -y

before_script:
  - cd ~/catkin_ws
  - source /opt/ros/$ROS_DISTRO/setup.bash
  - source devel/setup.bash
  - rospack profile
  - export DISPLAY=:0.0
    # - sh -e /etc/init.d/xvfb start
    # - sleep 10
  - glxinfo

# Compile and test (mark the build as failed if any step fails)
# TODO : add install targets and tests
script:
  - cd ~/catkin_ws
  - catkin build
    # Run the tests, ensuring the path is set correctly.
  - source devel/setup.bash
  - rospack profile
  - catkin run_tests
  - catkin_test_results
