<launch>
    <!--
    <node pkg="tf" type="static_transform_publisher" name="scanmatcher_to_base_footprint" 
        args="0.0 0.0 0.0 0.0 0.0 0.0 /scanmatcher_frame /base_footprint 100" />
        -->

    <!-- odometry from laser scans -->
    <!-- If argument "hector" is true, we use Hector mapping to generate odometry for us -->

    <node if="false" pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">

        <!-- Frame names -->
        <param name="map_frame" value="hector_map" />
        <param name="base_frame" value="base_footprint" />
        <param name="odom_frame" value="odom" />

        <!-- Tf use -->
        <param name="pub_map_odom_transform" value="false"/>
        <param name="pub_map_scanmatch_transform" value="true"/>
        <param name="pub_odometry" value="true"/>

        <!-- Map size / start point -->
        <param name="map_resolution" value="0.050"/>
        <param name="map_size" value="2048"/>
        <param name="map_multi_res_levels" value="2" />

        <!-- Map update parameters -->
        <param name="map_update_angle_thresh" value="0.06" />

        <!-- Advertising config --> 
        <param name="scan_topic" value="/scan"/>
    </node>

    <include file="$(find pwm_navigation)/launch/rtabmap.launch">

        <arg name="rtabmapviz" value="false"/>
        <arg name="rviz" value="false"/>

        <arg name="frame_id" value="base_footprint"/>
        <arg name="args" value="--delete_db_on_start"/>

        <arg name="rgb_topic" value="/camera/color/image_raw"/>
        <arg name="depth_topic" value="/camera/aligned_depth_to_color/image_raw"/>
        <arg name="camera_info_topic" value="/camera/color/camera_info"/>

        <arg name="visual_odometry" value="false"/>
        <arg name="icp_odometry" value="false"/>
        <arg name="subscribe_scan" value="false"/>
        <!--<arg name="odom_topic" value="/scanmatch_odom"/>-->
        <arg name="odom_topic" value="odom"/>

    </include>
</launch>
