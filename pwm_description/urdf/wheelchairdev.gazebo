<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:property name="wm1" value="1"/>
    <xacro:property name="wm2" value="1"/>

    <xacro:property name="wkp" value="1e6"/>
    <xacro:property name="wkd" value="1"/>

    <xacro:property name="cm1" value="0"/>
    <xacro:property name="cm2" value="0"/>
    <xacro:property name="ckp" value="1e6"/>
    <xacro:property name="ckd" value="1"/>

    <gazebo reference="right_wheel_link">
        <mu1 value="${wm1}"/>
        <mu2 value="${wm2}"/>
        <kp value="${wkp}" />
        <kd value="${wkd}" />
        <!--<fdir1 value="1 0 0"/>-->
    </gazebo>
    <transmission name="right_wheel_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <!--<type>hardware_interface</type>-->
        <actuator name="right_wheel_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="right_wheel_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
    </transmission>

    <gazebo reference="left_wheel_link">
        <mu1 value="${wm1}"/>
        <mu2 value="${wm2}"/>
        <kp value="${wkp}" />
        <kd value="${wkd}" />
        <!--<fdir1 value="1 0 0"/>-->
    </gazebo>
    <transmission name="left_wheel_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <!--<type>hardware_interface</type>-->
        <actuator name="left_wheel_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
        <joint name="left_wheel_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
    </transmission>

    <gazebo reference="caster_fl_link">
        <mu1 value="${cm1}"/>
        <mu2 value="${cm2}"/>
        <kp value="${ckp}" />
        <kd value="${ckd}" />
        <!--<fdir1 value="1 0 0"/>-->
    </gazebo>
    <gazebo reference="caster_fr_link">
        <mu1 value="${cm1}"/>
        <mu2 value="${cm2}"/>
        <kp value="${ckp}" />
        <kd value="${ckd}" />
        <!--<fdir1 value="1 0 0"/>-->
    </gazebo>
    <gazebo reference="caster_bl_link">
        <mu1 value="${cm1}"/>
        <mu2 value="${cm2}"/>
        <kp value="${ckp}" />
        <kd value="${ckd}" />
        <!--<fdir1 value="1 0 0"/>-->
    </gazebo>
    <gazebo reference="caster_br_link">
        <mu1 value="${cm1}"/>
        <mu2 value="${cm2}"/>
        <kp value="${ckp}" />
        <kd value="${ckd}" />
        <!--<fdir1 value="1 0 0"/>-->
    </gazebo>

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/wheelchair</robotNamespace>
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
        </plugin>
    </gazebo>

    <!-- sensors -->
    <!-- TODO : match UST-10LX params -->
    <gazebo reference="lidar_link">
        <sensor type="ray" name="lidar">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize> <!-- ?? -->
            <update_rate>40</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>1024</samples>
                        <resolution>1</resolution><!--?-->
                        <min_angle>-2.35</min_angle> <!-- +-135 deg -->
                        <max_angle>2.35</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.06</min>
                    <max>4.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
                <topicName>scan</topicName>
                <frameName>lidar_link</frameName>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="realsense_link">  
        <sensor type="depth" name="kinect">
            <always_on>true</always_on>
            <update_rate>20.0</update_rate>
            <camera>
                <horizontal_fov>${60.0*deg}</horizontal_fov>
                <image>
                    <format>B8G8R8</format>
                    <width>640</width>
                    <height>480</height>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>8.0</far>
                </clip>
                <!-- WARNING : no noise in depth -->
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </camera>
            <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
                <cameraName>kinect</cameraName>
                <alwaysOn>true</alwaysOn>
                <updateRate>10</updateRate>
                <imageTopicName>rgb/image_raw</imageTopicName>
                <depthImageTopicName>depth/image_raw</depthImageTopicName>
                <pointCloudTopicName>depth/points</pointCloudTopicName>
                <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
                <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
                <frameName>realsense_optical</frameName>
                <baseline>0.1</baseline>
                <distortion_k1>0.0</distortion_k1>
                <distortion_k2>0.0</distortion_k2>
                <distortion_k3>0.0</distortion_k3>
                <distortion_t1>0.0</distortion_t1>
                <distortion_t2>0.0</distortion_t2>
                <pointCloudCutoff>0.4</pointCloudCutoff>
            </plugin>
        </sensor>
    </gazebo>
</robot>
